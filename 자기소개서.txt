지원동기
- 도메인에 대한 흥미
채용 공고를 보고 트위니의 홈페이지에서 관제 시스템을 살펴보니 예전 생각이 많이 났습니다. 처음 개발을 배웠던 개발원에서의 마지막 팀 프로젝트인 WMS, 이전 회사의 스마트 오피스 제품에서 사용하던 로봇과 iot 시스템. WMS 프로젝트에서는 특히 입고된 재고의 적재 위치 자동 배정 알고리즘, 출고할 재고의 자동 배정 알고리즘을 개발했던 경험이 떠올랐습니다. 스마트 오피스에 로봇과 iot 시스템을 연결하는 프로젝트에서는 다양한 하드웨어(로봇과 각종 iot기기)로부터 데이터를 받고 이를 통한 모니터링 뿐만 아니라 사용자가 직접 제어하거나 자동화된 동작 기능을 구현했던 경험이 있었습니다. 도메인에 관심을 갖고 빠져들어야 열정적으로 개발할 수 있다고 생각합니다. 앞서 말씀드린 두 번의 경험 모두 주도적인 관심을 갖고 가장 열정적으로 개발했던 도메인이었고 트위니의 관제 시스템은 이 모든 경험이 이어질 수 있는 도메인이라는 생각이 들어 지원하였습니다.

- 개발자된 과정

직무역량
- 장점/강점
  1. 메타인지
  2. 습득이 빠른편

입사 후 포부
- 기술 연구와 습득으로 기여
- 개발 환경과 문화에 기여

개발원에서 공부.
전자정부프레임워크 풀스택 개발자 양성과정
이름대로 Egov(Spring framework) 기반으로 풀스택 개발을 가르치는 과정이었음.
꽤 잘했고 최종 프로젝트의 팀 구성 핵심 멤버 중 하나 (5명 중 1인)
상위 5인이 각자 한 팀씩 맡아 5개 팀으로 구성.
리더쉽에는 자신이 없어 다른 멤버에게 팀장을 부탁하고, 프로젝트 구조 및 공통 모듈 개발을 주로 담당.
몇몇 핵심 기능을 개발 하였고, 그 중 하나가 입고 배정 알고리즘 및 출고 배정 알고리즘 기능.
그 외에도 팀원들의 기술적인 어려움을 도와주는 일을 많이 했음.
기술 스택은 Spring framework, jsp, jQuery, oracle DB, MyBatis


첫 취업한 회사는 스마트오피스 구축 회사.
개발 되어 있는 솔루션을 고객사의 요구사항에 맞게 커스터마이징 하여 구축하는 업무를 맡음.
개발 환경은 SVN, JSP, Egov(Spring framework), ibatis, rdbms(mysql, mssql 등), jQuery 등으로 구성.
거의 대부분이 온프레미스(설치형)으로 납품 되었고, linux(centos, ubuntu)서버에 직접 java, apache, tomcat 등의 설치 및 연동(mod_jk) 작업도 수행함.

jQuery의 ajax를 사용한 비동기 방식을 선호했고, 인터랙티브한 기능 개발에 관심이 생겨 react, vue 등을 공부함.
기존 JSP의 화면을 react로 바꿔보는 등 공부한 것을 회사 제품에 적용하는 방안에 대한 시도를 함.
그 결과 스마트오피스 제품의 iot 기능을 고도화 하는 프로젝트에 vue를 사용해보는 실험적인 케이스를 담당하게 됨.

전력, 공기질, 동작감지 등 각종 iot 기기로부터 데이터를 주고받고 모니터링 및 제어하는 기능을 개발함.
그 과정에서 MQTT, UDP, Socket 등 다양한 방법으로 기기들과 통신하는 경험을 할 수 있었음.
특히 기기마다 특성이 다르기 때문에 모니터링을 위한 데이터 수집을 전략을 세우는 것이 어려웠다.
예를 들어, 어떤 기기는 실시간으로 데이터 변화를 push해주는가 하면, 어떤 기기는 주기적으로 폴링하여 상태를 추적해야 했다.
어떤 기기는 중계서버를 통해 통신해야 했고, 어떤 기기는 기기와 직접 통신할 수 있었다. 이러한 기기간의 차이는 같은 목적의 iot 기기 간에도 존재하였기에 하나의 기능을 구현하기 위해서는 기기간의 차이와 공통점을 먼저 파악하고 기술적인 가능성을 분석해야 했다.
어찌저찌 프로토타입 수준의 개발이 완료 되었으나 이후 회사의 추진 방향과 맞지 않아 그 이상의 진척은 없었다.

고객사의 요구사항에 의해 업무가 생기다보니 종종 남는 업무시간에 지속적인 학습을 함.
이 시기에 react, node(express, electron), typescript 등 javascript 진영의 기술스택을 많이 배우고 접함.
더이상 새롭게 공부한 것을 회사 업무에 적용하기는 어려운 환경이라고 판단하여 이직함.


이직한 곳에서는 주로 ERP 개발과 GW소스 분석을 담당함.
입사하자마자 ERP, GW, 근태관리시스템이 새롭게 변경되었고 모두 상용 제품을 구매한 것.

입사 첫 업무는 새로운 근태관리시스템의 근무,휴가 정보를 ERP에 동기화 시키는 중계 서버를 만드는 것.
팀의 기존의 주력 언어가 C#이었는지, C# .Net으로 개발할 것을 권유받음.
근태관리시스템이 제공해주는 API를 통해 근무, 휴가 정보를 수집하고
수집한 정보를 토대로 변경된 사항을 ERP의 DB에 직접 Merge하는 기능을 개발함.
ERP DB의 부하를 늘리지 않기 위해 수집한 정보를 별도의 mongoDB에 저장하고, 이를 기반으로 새로 수집된 정보를 비교하여 변경사항을 추적하는 방식.
이 과정에서 C# .Net과 MongoDB에 대해 배워볼 수 있었다.
이후 동기화 속도가 오래걸리는 문제가 있었고, 이에 Java로 전환하고 completableFuture를 사용하여 동기화 작업 속도를 1/10로 줄일 수 있었음.(10~20분 소요 -> 1~2분 소요)

ERP 개발은 영림원소프트랩의 k-studio라는 툴과 mssql로 수행함.
k-studio는 일종의 노코드 툴로, 영림원에서 화면 구성 및 데이터 매핑을 코드 없이 할 수 있도록 만든 툴이다.
따라서 개발업무와는 거리가 조금 있는 편. 그나마 mssql의 SP가 비즈니스 로직을 담당하고 있기 때문에 대부분의 개발 업무는
sp를 짜는 것.
간단한 컬럼 추가/수정 부터 없던 업무 프로세스 기능을 만드는 것까지 다양한 커스터마이징을 직접 수행하여 유지관리 비용을 절감함.

GW는 해당 제품에 대한 소스 접근 권한을 받았고 이를 분석하여 제한적이지만 직접 커스터마이징 개발의 가능성을 찾아낼 수 있었음. 
Spring framework기반으로 JPA, lombok이 사용되었음. 화면단은 backbone.js.
소스 접근 권한이 있어 class파일의 내용을 볼 수 있었기에 분석이 가능했다.
특정 class의 bean을 커스터마이징한 class로 교체하는 방식으로도 커스터마이징이 가능하다.
ERP와의 전자결재 연동을 개발하였고 GW의 일부 기능을 타 시스템이 사용 가능한 API로 확장 개발하여 업무 자동화를 이룸.
(입퇴사 자동화, 별칭메일 설정)
GW를 분석하면서 GW를 통해 통합된 서비스 제공 방법에 대해서 고민함.
그 과정에서 GW를 SSO의 idp로 활용하는 방법, 제 3자 서비스를 GW를 통해 서비스 하는 방법 등에 대해서 연구함.
RestTemplate을 활용해 3자 서비스의 api를 GW를 통해 호출하는 기능을 개발하면서 API gateway 개념을 알게됨.

팀 특성상 새로운 시스템, 전산화가 필요할 때 직접 자체 구축하기보단 상용 시스템을 도입하는 것을 선호함. 때문에 자체적으로 시스템을 구축하고 개발하는 업무가 적음.
결국 이번에도 혼자 공부하고 토이 프로젝트를 하는 시간이 많아짐.
JS 진영을 공부하면서 프론트의 기능 개발을 위주로 연구했던 이전과 달리 이번에는 백엔드 위주로 학습함.
Spring boot, JPA, Lombok의 조합을 중심으로 DDD(도메인 주도 개발) 개념을 학습하고 있음.
토이 프로젝트 hmm이 위 내용의 학습을 배경으로 실습하는 프로젝트임.
그 외에도 깊이를 늘리기 위해 디자인패턴을 집중적으로 학습하고 있음.



-- 여기부터는 부족함에 대해서만 서술됨. 약간 메타인지? 관점 --
API gateway를 알게되면서 MSA(마이크로 서비스 아키텍처)에 대해 접하게 됨.
MSA에 대한 간략한 개념은 이해하였으나 실제 개발에서는 stateless 구조를 이해하고, Redis, Kafka를 사용할 줄 알아야 함.
추가로 CI/CD와 관련하여 Jenkins, Github를 활용한 자동화, Docker와 쿠버네티스에 대해서도 알아야 함.
